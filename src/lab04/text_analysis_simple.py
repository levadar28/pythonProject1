#!/usr/bin/env python3
"""
–í—Å–µ —Ç–µ—Å—Ç-–∫–µ–π—Å—ã –≤ –æ–¥–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
"""

from pathlib import Path
import csv
import re
from collections import Counter


def process_test_case(test_name, input_text, expected_output):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ç–µ—Å—Ç-–∫–µ–π—Å"""
    print(f"\n{'=' * 60}")
    print(f"–¢–ï–°–¢-–ö–ï–ô–° {test_name}")
    print(f"–í—Ö–æ–¥: '{input_text}'")
    print('=' * 60)

    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: casefold + —ë‚Üí–µ
    normalized = input_text.lower().replace('—ë', '–µ')
    normalized = ' '.join(normalized.split())

    # –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è: \w+(?:-\w+)*
    tokens = re.findall(r'\w+(?:-\w+)*', normalized)

    # –ü–æ–¥—Å—á–µ—Ç —á–∞—Å—Ç–æ—Ç
    freq = Counter(tokens)

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: count ‚Üì, word ‚Üë
    sorted_words = sorted(freq.items(), key=lambda x: (-x[1], x[0]))

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ CSV
    filename = f"data/report_{test_name.lower()}.csv"
    Path("data").mkdir(exist_ok=True)

    with open(filename, "w", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(["word", "count"])
        if sorted_words:
            writer.writerows(sorted_words)

    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"–í—Å–µ–≥–æ —Å–ª–æ–≤: {sum(freq.values())}")
    print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤: {len(freq)}")

    if freq:
        print("–¢–æ–ø-5:")
        for word, count in sorted_words[:5]:
            print(f"{word}:{count}")
    else:
        print("–¢–æ–ø-5: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    print(f"\n‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    actual_output = dict(sorted_words)
    print(f"–ü–æ–ª—É—á–µ–Ω–æ: {actual_output}")
    print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {expected_output}")

    if actual_output == expected_output:
        print("üéØ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù!")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–π–ª
    print(f"üíæ –§–∞–π–ª: {filename}")
    print(Path(filename).read_text(encoding="utf-8"))


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤"""

    print("üéØ –ó–ê–ü–£–°–ö –¢–ï–°–¢-–ö–ï–ô–°–û–í –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –¢–ï–ö–°–¢–ê")
    print("–°–æ–∑–¥–∞—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã...")

    # –¢–µ—Å—Ç-–∫–µ–π—Å A: –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π
    process_test_case(
        "A",
        "–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! –ü—Ä–∏–≤–µ—Ç!!!",
        {"–ø—Ä–∏–≤–µ—Ç": 2, "–º–∏—Ä": 1}
    )

    # –¢–µ—Å—Ç-–∫–µ–π—Å B: –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª
    process_test_case(
        "B",
        "",
        {}
    )

    # –¢–µ—Å—Ç-–∫–µ–π—Å C: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    process_test_case(
        "C",
        "–ü—Ä–∏–≤–µ—Ç",
        {"–ø—Ä–∏–≤–µ—Ç": 1}
    )

    


if __name__ == "__main__":
    main()